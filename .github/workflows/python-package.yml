# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  pre_job:
    # Cancels all other running workflow runs. We don't want to have two parallel test
    # suites running against the test server.
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: always
          cancel_others: true

  build:
    # Install all requirements, run the test suite, and clean up the server test account.
    runs-on: ubuntu-latest
    needs: pre_job
    strategy:
      matrix:
        python-version: ['3.8', '3.12']
        #include:
        #  # Allow failure on Python dev - e.g. Cython install regularly fails
        #  - python-version: "3.13-dev"
        #    allowed_failure: true
      max-parallel: 1

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Unencrypt secret file
      env:
          AES_256_CBC_PASS: ${{ secrets.AES_256_CBC_PASS }}
      # Only repo owners have access to the secret. PRs will run only the unit tests
      if: env.AES_256_CBC_PASS != ''
      run: |
        openssl aes-256-cbc -d -md sha256 -in settings.yml.ghenc -out settings.yml -pass env:AES_256_CBC_PASS

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip wheel

    - name: Install cutting-edge Cython-based packages on Python dev versions
      continue-on-error: ${{ matrix.allowed_failure || false }}
      if: matrix.python-version == '3.13-dev'
      run: |
        sudo apt-get install libxml2-dev libxslt1-dev
        python -m pip install hg+https://foss.heptapod.net/pypy/cffi
        python -m pip install git+https://github.com/cython/cython.git
        python -m pip install git+https://github.com/lxml/lxml.git
        python -m pip install git+https://github.com/yaml/pyyaml.git

    - name: Install dependencies
      continue-on-error: ${{ matrix.allowed_failure || false }}
      run: |
        python -m pip install .
        python -m pip install -r test-requirements.txt

    - name: Test with coverage
      continue-on-error: ${{ matrix.allowed_failure || false }}
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        black --check --diff exchangelib tests scripts
        isort --check --diff exchangelib tests scripts
        flake8 exchangelib tests scripts
        blacken-docs *.md docs/*.md
        unittest-parallel -j 4 --level=class --coverage --coverage-source exchangelib
        coveralls --service=github

  cleanup:
    # Clean up the server test account regardless of whether test failed
    runs-on: ubuntu-latest
    needs: build
    if: ${{ always() }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Unencrypt secret file
      env:
          AES_256_CBC_PASS: ${{ secrets.AES_256_CBC_PASS }}
      # Only repo owners have access to the secret. PRs will run only the unit tests.
      # The encrypted file was created as:
      #  openssl aes-256-cbc -e -md sha256 -in settings.yml -out settings.yml.ghenc
      if: env.AES_256_CBC_PASS != ''
      run: |
        openssl aes-256-cbc -d -md sha256 -in settings.yml.ghenc -out settings.yml -pass env:AES_256_CBC_PASS

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip wheel

    - name: Install dependencies
      run: |
        python -m pip install .
        python -m pip install -r test-requirements.txt

    - name: Clean up test account
      run: |
        PYTHONPATH=./ python scripts/wipe_test_account.py
